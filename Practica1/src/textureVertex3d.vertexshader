#version 330 core

// Input vertex data, different for all executions of this shader.
//layout(location = 0) in vec3 vertexPosition;
//layout(location = 1) in vec3 vertexColor;
//layout(location = 1) in vec2 texCoord;

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoords;


//Out values
//out vec3 frag_color;
//out vec2 frag_CoordTex;

out vec2 TexCoords;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main(){
    //gl_Position = finalMatrix*(vec4((vertexPosition),1));
	//frag_CoordTex = vec2(texCoord.x, 1.0 - texCoord.y);

	gl_Position = projection * view * model * vec4(position, 1.0f);
	
	
	TexCoords = texCoords;
}

